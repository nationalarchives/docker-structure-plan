name: Docker build
on:
  workflow_call:
    inputs:
      IMAGE_NAME:
        required: true
        type: string
      DOCKERFILE:
        required: true
        type: string
permissions:
  packages: write
  contents: read
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: hadolint/hadolint-action@v3
      with:
        dockerfile: docker/$IMAGE_NAME/Dockerfile
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build image
      run: docker build --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --platform=linux/amd64 .
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: dockerimagecache
        path: /tmp/dockerimage-$IMAGE_NAME.tar
  test:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dockerimagecache
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/dockerimage-$IMAGE_NAME.tar
          docker image ls -a
